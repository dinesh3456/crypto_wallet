{
	"id": "9e6fee37c31b15c17b4c3a6b407b5104",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contrct.sol": {
				"content": "pragma solidity >=0.8.0 < 0.9.0;\r\ncontract MyContract{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contrct.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contrct.sol\":34:63  contract MyContract{\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contrct.sol\":34:63  contract MyContract{\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122012fc2138f1ba5ac4e0c1ab7b4ae37b56e369436ee242f55840c3547146a6710764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122012fc2138f1ba5ac4e0c1ab7b4ae37b56e369436ee242f55840c3547146a6710764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xFC 0x21 CODESIZE CALL 0xBA GAS 0xC4 0xE0 0xC1 0xAB PUSH28 0x4AE37B56E369436EE242F55840C3547146A6710764736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "34:29:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea264697066735822122012fc2138f1ba5ac4e0c1ab7b4ae37b56e369436ee242f55840c3547146a6710764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xFC 0x21 CODESIZE CALL 0xBA GAS 0xC4 0xE0 0xC1 0xAB PUSH28 0x4AE37B56E369436EE242F55840C3547146A6710764736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "34:29:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34,
									"end": 63,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34,
									"end": 63,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012fc2138f1ba5ac4e0c1ab7b4ae37b56e369436ee242f55840c3547146a6710764736f6c63430008070033",
									".code": [
										{
											"begin": 34,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34,
											"end": 63,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34,
											"end": 63,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34,
											"end": 63,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34,
											"end": 63,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contrct.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contrct.sol\":{\"keccak256\":\"0xaa4adde99ccdca8572f91ce12ecef9eb5722dc0f3d6a7caa7dc26e08f1d3a21a\",\"urls\":[\"bzz-raw://d86e21ade268afb3b904e287a55500e39be6cbf07e75308da5dcfca332cd5ac5\",\"dweb:/ipfs/Qma1X5uhvyPQW2KtGWb9L6rqp3aPbDbVRqK6FBz52kaGfW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contrct.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contrct.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contrct.sol": {
				"ast": {
					"absolutePath": "contrct.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nameLocation": "43:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "34:29:0",
							"usedErrors": []
						}
					],
					"src": "0:63:0"
				},
				"id": 0
			}
		}
	}
}